// Generated by CoffeeScript 1.6.2
var Serializer, Standard, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Serializer = require('./serializer');

Standard = (function(_super) {
  __extends(Standard, _super);

  function Standard() {
    _ref = Standard.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Standard.prototype.writeAttributes = function(data) {
    var key, value;

    for (key in data) {
      value = data[key];
      this.writeAttribute(key, value);
    }
    return this;
  };

  Standard.prototype.stringifyArray = function(key, data) {
    var value, _i, _len;

    for (_i = 0, _len = data.length; _i < _len; _i++) {
      value = data[_i];
      this.stringifyAny(key, value);
    }
    return this;
  };

  Standard.prototype.stringifyObject = function(data) {
    var key, value;

    for (key in data) {
      value = data[key];
      if (key[0] !== '$' && (value != null)) {
        this.stringifyAny(key, value);
      }
    }
    return this;
  };

  Standard.prototype.stringifyAny = function(key, value) {
    if (Array.isArray(value)) {
      this.stringifyArray(key, value);
    } else {
      this.writeElement(key, value);
    }
    return this;
  };

  return Standard;

})(Serializer);

module.exports = Standard;
